<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialise the stats
display_set_gui_size(view_wview[0],view_hview[0]);

hp = 3;
maxhp = 3;
sapphires = 0;
score = 0;
highscore = 0;
time = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///To Start Game

var start = keyboard_check_pressed(vk_space)

if (gamepad_is_connected(0)){
    start = start || gamepad_button_check_pressed(0, gp_start);
}

if (start &amp;&amp; room == rm_menu){
    room_goto(rm_one);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Play background music

// Create audio emitter
audio_em = audio_emitter_create();

audio_emitter_gain(audio_em,0.5);
audio_play_sound_on(audio_em,snd_bgmusic,true,10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init Game UI

switch(room){
    case rm_menu:
        draw_set_halign(fa_center);
        draw_set_font(font_title);
        draw_text_colour(room_width/2+4,32+6,"Tutorial Game", c_black, c_black, c_black, c_black,1);
        draw_text_colour(room_width/2,32,"Tutorial Game", c_white, c_white, c_white, c_white,1);

        var str;
        if (gamepad_is_connected(0)){
            str = "Press [Start] to Play"
        } else{
            str = "Press [Space] to Play"        
        }
        
        draw_set_font(font_start);
        draw_text_colour(room_width/2+2,room_height/2+4,str, c_black, c_black, c_black, c_black,1);
        draw_text_colour(room_width/2,room_height/2,str, c_ltgray, c_ltgray, c_ltgray, c_ltgray,1);
        break;

    case rm_highscore:
        draw_set_halign(fa_center);
        draw_text_colour(view_wview[0]/2, 80, "Score: " + string(score),c_white,c_white,c_white,c_white,1);
        draw_text_colour(view_wview[0]/2, 120, "Time: " + string(time/room_speed),c_white,c_white,c_white,c_white,1);
        draw_text_colour(view_wview[0]/2, 160, "Highscore: " + string(highscore),c_white,c_white,c_white,c_white,1);
        break;
        
    default:
        draw_hearts();
        break;
    
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End game
game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
